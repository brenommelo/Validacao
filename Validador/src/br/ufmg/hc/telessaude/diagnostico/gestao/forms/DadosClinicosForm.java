/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DadosClinicosForm.java
 *
 * Created on 27/01/2012, 09:12:15
 */
package br.ufmg.hc.telessaude.diagnostico.gestao.forms;

import br.ufmg.hc.telessaude.diagnostico.dominio.commons.Acao;
import br.ufmg.hc.telessaude.diagnostico.dominio.entity.DadosClinicos;
import java.awt.Color;
import java.awt.Component;
import java.util.Collection;
import java.util.List;
import javax.swing.JDesktopPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author william.carvalho
 */
public class DadosClinicosForm extends Form {

    private boolean urgente;

    /**
     * Creates new form DadosClinicosForm
     */
    public DadosClinicosForm(JDesktopPane desktop, List<DadosClinicos> dados) {
        super(desktop, Acao.NULA);
        initComponents();
        desktop.add(this);
        
        popularGrid(dados);
    }

    public boolean isUrgente() {
        return urgente;
    }

    public void setUrgente(boolean urgente) {
        this.urgente = urgente;
        DefaultTableCellRenderer render = null;
        if (this.urgente) {
            render = new DefaultTableCellRenderer() {
                public Component getTableCellRendererComponent(JTable table, Object value,
                        boolean isSelected, boolean hasFocus, int row, int column) {
                    super.getTableCellRendererComponent(table, value, isSelected,
                            hasFocus, row, column);
                    if (!hasFocus && !isSelected) {
                        if (row == 1) {
                            setBackground(Color.RED);
                        } else {
                            setBackground(Color.WHITE);
                        }
                    }
                    return this;
                }
            };
        } else {
            render = new DefaultTableCellRenderer();
        }
        render.setForeground(Color.BLACK);
        gridDadosCLinicos.setDefaultRenderer(Object.class, render);
    }

    private void popularGrid(Collection<DadosClinicos> dadosClinicos) {
        DefaultTableModel model = this.createDefaultTableModel();
        for (DadosClinicos dados : dadosClinicos) {
            if (!dados.getDescricao().equals("PRESSAOARTERIAL") && !dados.getValor().equals("-")) {
                model.addRow(new Object[]{
                    dados.getDescricao().replace("DATANASCIMENTOSTR", "DATANASCIMENTO"), dados.getValor()
                });
            }
        }
        gridDadosCLinicos.setModel(model);
    }

    private DefaultTableModel createDefaultTableModel() {
        return new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
            "Descrição", "Valor"
        }) {
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        gridDadosCLinicos = new javax.swing.JTable();

        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Dados Clínicos do Exame");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/br/ufmg/hc/telessaude/diagnostico/gestao/images/telessaude1.png"))); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados Clínicos do Exame", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 255)));

        gridDadosCLinicos.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        gridDadosCLinicos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Descrição", "Valor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gridDadosCLinicos.setToolTipText("");
        gridDadosCLinicos.setRowHeight(20);
        jScrollPane1.setViewportView(gridDadosCLinicos);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable gridDadosCLinicos;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void execute(Acao acao) {
    }
}
